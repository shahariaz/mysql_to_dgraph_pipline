query findCustomers($ageThreshold: int, $contentType: string, $contentIds: [string]) {
  var(func: type(chorki_customers)) @filter(eq(deleted_at, null)) {
    # Age condition: customers older than $ageThreshold
    age as math(since(date_of_birth) / 365.25 / 86400) # Convert seconds to years
    ageFilter @filter(ge(val(age), $ageThreshold))

    # Watch histories subquery
    watchHistories as customer_id_reverse @filter(
      type(chorki_watch_histories) AND
      NOT eq(deleted_at, null) AND
      eq(content_type, $contentType) AND
      eq(content_id, $contentIds)
    )

    # Combine conditions
    matches as math(ageFilter OR count(watchHistories) > 0)
  }

  # Final result: customers matching all conditions
  customers(func: type(chorki_customers)) @filter(
    eq(deleted_at, null) AND
    val(matches)
  ) {
    uid
    id
    name
    email
    date_of_birth
    # Add other fields as needed
    customer_id_reverse { # Related watch_histories
      dgraph.type
      id
      content_type
      content_id
      watched_at
      watched_duration
    }
  }
}